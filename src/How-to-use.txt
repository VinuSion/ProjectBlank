Before i explain how all of these UI components
work and how to use them i must advice you with the following...

1. Read the comments, since they'll guide you as to what's
going on..

2. If you're going to change something major, like modifying
an entire UI component to be completely different, please let
me know, since i don't want to see any surprises on how
everything has been changed or even added for that matter..

3. If you'll be adding things to an existing UI component
also let me know (look at #2 as to why that is)...

4. This file will get updated with info each time a new UI
component gets added, alongside their explanation for future
Blank Dev's to see and understand...

5. Whatever you do, DO NOT ERASE ANYTHING IMPORTANT REGARDING
THE ACTUAL UI COMPONENTS (such as comments, dummy test data, etc.)
since they are there for a reason... oh and don't erase
anything in this file either, since it explains everything lol..
------------------------------------------------------------------------------------

Without further a do let's start the entire explanation process!

To get started, open the 'App.vue' file located in the 'src' folder.
Here, you'll see everything that will be rendered into the actual Blank
Application itself (for now it's just a UI component app FOR Blank, not 
the actual Blank_Alpha app, but it can be, maybe later on...).

To take a look at the actual components themselves, open the 'components'
folder located in 'src/components', here you'll see how each component is
built and what default values are getting passed on..

As you may have noticed, there are other types of components that are not 
in the 'components' folder itself and that is the navbar..

For things like the navbar there is a dedicated folder for the actual layout
of the app itself, located in the 'layout' folder in 'src/layout', you'll see
all primary layout components that would presumably make up the actual Blank
app.

However, to actually access the different pages of the navbar, that also has
its own folder called 'views' located in 'src/views', where you'll see all of
the different pages Blank should have on the navbar..
For now, there's nothing in them but later on, they should contain it's 
respective content inside of each and every one of them as individual pages.
So you can assume that any UI component would be imported in any of these "pages"
that will automatically render in the main 'App.vue' component, once you're
on that page..

NOTE: there is another folder called 'router' which is from a vue-exclusive library
called vue-router, which is used to make navigation on different pages possible,
so don't worry about this too much.

Lastly, theres the 'assets' folder located in 'src/assets' which contains 2 more
folders named: 'img' and 'scss', where images and SVG's are stored in 'img',
and all of the styling for any UI component as for the entire app itself is located 
in 'scss'...
Inside the 'scss' folder, there are 3 more folders and 2 files...

1. The folder "base-styling", used for styles of the app, main layout,
colors for themes and stuff from components, variables, etc..

2. The folder "component-styling", is as you've guessed, the styles for the
component themselves ONLY.

3. The folder "mixins", is used only for vendor prefixes a.k.a styling for
browser support and stuff..

4. The file "all-styles.scss" is where all of the styling for the app, UI
components and other stuff will be imported from..
NOTE: The reason why all of the styling is being rendered on screen, is because
all other styles from various of different SCSS files are being imported onto said file,
and this file is being imported onto the "main.js" file, where the vue-router,
the app itself, etc. is also being imported into.

5. The file "Color-specifications.txt" is mainly used for storing the
color scheme references and other color-related stuff.
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------

How-to-Import-Components: If you want to import any component anywhere.. import it by writing " import NameOfComponent from './components/name-of-component.vue' ".
On the "components: {}" section, write the name of the component: "NameOfComponent".
NOTE: ALL OF THE ABOVE SHOULD BE WRIITEN INSIDE THE "<script></script>" TAG. COMPONENT AND TAG NAMES ARE PascalCase, FILE NAMES ARE case-separated.vue .
After this, inside the "<template></template>" tag of where you're trying to import this into, write the name of the component as follows:
"<NameOfComponent></NameOfComponent>".

After having done all of that, you're now ready to use the component you were trying to import!

p.s. you can import components inside of components..
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------

The following will be an in-depth explanation of all UI components, they're
documentation, how to style, and pass data onto, assuming you know how to import them, we can begin..

-----------------------------------------------------------UI COMPONENTS EXPLANATION SECTION------------------------------------------------------------------------------

1. Toggle Switch

How-to-Use: There isn't much to say about this one, since looking at the actual build of this component..
All it has is a default "false" value that when clicked on, triggers a function named "onChange" that changes it to "true", therefore
the animation shows up..

To take a look at the styling of this component, go to: 'src/assets/scss/component-styling/_toggle-switch.scss'.

NOTE: For now you can't change the actual color theme of this component..

//////////////////////////////////////////////////////////////////////////////////////////////////////

2. Styled Button

How-to-Use: For this component, you can see that the only data it has is purely dummy data used to demonstrate how it might work when a
callback function is attached to it, as you can see in the 'app.vue' file...
Other than that, you can pass these custom color classes (this is how the color themes will work for this component) by going to:
'src/assets/scss/base-styling/_colors.scss'.
If you scroll to the button style themes, you'll see their individual colors and other color-related stuff...

When using this component, make sure to add the class name of the color theme you'd like, example: "btnLightRed".
And for extra customization such as size, add the button length class such as: "btnMediumLength", which can be seen in: 
'src/assets/scss/component-styling/_button-styles.scss'.

//////////////////////////////////////////////////////////////////////////////////////////////////////

3. Video Container

How-to-Use: [W.I.P]





